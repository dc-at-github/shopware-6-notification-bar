!function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)i.d(n,o,function(e){return t[e]}.bind(null,o));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="/bundles/dcglobalnotification/",i(i.s="XvVh")}({"+afO":function(t,e,i){},"1HdN":function(t){t.exports=JSON.parse('{"dc":{"notification":{"general":{"note":"Note!","commonFieldInfo":"the below changes are common for all languages","categoryHelpText":"you don\'t have any notification to show.","noRecordTitle":"No Notification!","noRecordSubline":"There is no notification found in the record"},"header":{"new":"Create Notification","update":"Update Notification"},"list":{"title":"Notification"},"column":{"title":"Title","active":"Active"},"button":{"save":"Save","create":"Create"},"generalTitle":"Notification General","field":{"activeNotification":"Active Notification Bar","title":"Title","displayTitle":"Display Title","content":"Content","displayAs":"Display As","animationType":"Animation Type","border":"Border","barPosition":"Bar Position","barWidth":"Bar Width","cookieLifeTime":"Cookie Lifetime in Minutes","titleColor":"Title Color","iconColor":"Close Icon Color","overlayColor":"Popup Overlay Color","backgroundColor":"Background Color","borderColor":"Border Color","activeForCategory":"Enable Separate Notification"},"placeholder":{"title":"Title","cookieLifeTime":"time in minute"}}}}')},"3Yx9":function(t,e,i){var n=i("b9Ev");n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);(0,i("SZ7m").default)("86c39548",n,!0,{})},IT6V:function(t,e,i){var n=i("+afO");n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);(0,i("SZ7m").default)("d11467d8",n,!0,{})},KDB6:function(t,e){Shopware.Component.extend("dc-notification-create","dc-notification-detail",{methods:{getDcNotification:function(){this.dcNotification=this.dcNotificationRepository.create(Shopware.Context.api),this.isLoading=!1},onSave:function(){var t=this;this.dcNotificationRepository.save(this.dcNotification,Shopware.Context.api).then((function(){t.isLoading=!1,t.processSuccess=!0,t.createNotificationSuccess({title:"Succeess!",message:"Notification Saved successfully."}),t.$router.push({name:"dc.notification.detail",params:{id:t.dcNotification.id}})})).catch((function(e){t.isLoading=!1,e.response.data&&e.response.data.errors&&e.response.data.errors.forEach((function(e){t.createNotificationWarning({title:"Error!",message:e.detail,duration:1e4})}))}))}}})},SZ7m:function(t,e,i){"use strict";function n(t,e){for(var i=[],n={},o=0;o<e.length;o++){var a=e[o],c=a[0],r={id:t+":"+o,css:a[1],media:a[2],sourceMap:a[3]};n[c]?n[c].parts.push(r):i.push(n[c]={id:c,parts:[r]})}return i}i.r(e),i.d(e,"default",(function(){return g}));var o="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!o)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var a={},c=o&&(document.head||document.getElementsByTagName("head")[0]),r=null,l=0,s=!1,d=function(){},f=null,p="data-vue-ssr-id",u="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function g(t,e,i,o){s=i,f=o||{};var c=n(t,e);return h(c),function(e){for(var i=[],o=0;o<c.length;o++){var r=c[o];(l=a[r.id]).refs--,i.push(l)}e?h(c=n(t,e)):c=[];for(o=0;o<i.length;o++){var l;if(0===(l=i[o]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete a[l.id]}}}}function h(t){for(var e=0;e<t.length;e++){var i=t[e],n=a[i.id];if(n){n.refs++;for(var o=0;o<n.parts.length;o++)n.parts[o](i.parts[o]);for(;o<i.parts.length;o++)n.parts.push(m(i.parts[o]));n.parts.length>i.parts.length&&(n.parts.length=i.parts.length)}else{var c=[];for(o=0;o<i.parts.length;o++)c.push(m(i.parts[o]));a[i.id]={id:i.id,refs:1,parts:c}}}}function b(){var t=document.createElement("style");return t.type="text/css",c.appendChild(t),t}function m(t){var e,i,n=document.querySelector("style["+p+'~="'+t.id+'"]');if(n){if(s)return d;n.parentNode.removeChild(n)}if(u){var o=l++;n=r||(r=b()),e=y.bind(null,n,o,!1),i=y.bind(null,n,o,!0)}else n=b(),e=_.bind(null,n),i=function(){n.parentNode.removeChild(n)};return e(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap)return;e(t=n)}else i()}}var v,w=(v=[],function(t,e){return v[t]=e,v.filter(Boolean).join("\n")});function y(t,e,i,n){var o=i?"":n.css;if(t.styleSheet)t.styleSheet.cssText=w(e,o);else{var a=document.createTextNode(o),c=t.childNodes;c[e]&&t.removeChild(c[e]),c.length?t.insertBefore(a,c[e]):t.appendChild(a)}}function _(t,e){var i=e.css,n=e.media,o=e.sourceMap;if(n&&t.setAttribute("media",n),f.ssrId&&t.setAttribute(p,e.id),o&&(i+="\n/*# sourceURL="+o.sources[0]+" */",i+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */"),t.styleSheet)t.styleSheet.cssText=i;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(i))}}},XvVh:function(t,e,i){"use strict";i.r(e);i("IT6V");Shopware.Component.register("dc-plugin-icon",{template:'{% block dc_notification_plugin_icon %}\n    <div class="dc-notification-plugin-icon">\n        <img :src=\'"/dcglobalnotification/static/img/plugin.png" | asset\' class="dc-notification-plugin-icon" />\n    </div>\n{% endblock %}'});var n=Shopware,o=n.Component,a=n.Mixin,c=Shopware.Data.Criteria;o.register("dc-notification",{template:'{% block dc_notification_config_container %}\n    <sw-page class="sw-dc-notification">\n        {% block sw_dc_notification_header %}\n            <template slot="smart-bar-header">\n                <h2>{{ $tc(\'dc.notification.list.title\') }}</h2>\n            </template>\n        {% endblock %}\n\n        {% block sw_dc_actions_container %}\n            <template slot="smart-bar-actions">\n                {% block sw_dc_action_create %}\n                    <sw-button\n                            :routerLink="{name:\'dc.notification.create\'}"\n                            class="sw_dc_notification__action_create"\n                            :isLoading="isLoading"\n                            variant="primary">\n                        {{ $tc(\'dc.notification.button.create\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n\n        {% block sw_dc_language_switch %}\n            <template slot="language-switch">\n                <sw-language-switch @on-change="onChangeLanguage"></sw-language-switch>\n            </template>\n        {% endblock %}\n\n        <template slot="content">\n                {% block dc_notification_list %}\n                    <sw-entity-listing\n                            v-if="dcNotifications && total > 0"\n                            :items="dcNotifications"\n                            detailRoute="dc.notification.detail"\n                            :repository="notificationRepository"\n                            :showSelection="true"\n                            :columns="columns"\n                            :isLoading="isLoading">\n\n                        {% block dc_notification_column_active %}\n                            <template #column-active="{item}">\n                                <sw-icon name="default-basic-shape-circle-filled" v-if="item.active" size="12px" color="#1abc9c" />\n                                <sw-icon name="default-basic-shape-circle-filled" v-if="!item.active" size="12px" color="#fc427b" />\n                            </template>\n                        {% endblock %}\n\n                    </sw-entity-listing>\n                {% endblock %}\n\n                {% block dc_notification_no_record %}\n                    <template v-if="!isLoading && !total">\n                        <sw-empty-state\n                                :title="$tc(\'dc.notification.general.noRecordTitle\')"\n                                :subline="$tc(\'dc.notification.general.noRecordSubline\')">\n                        </sw-empty-state>\n                    </template>\n                {% endblock %}\n        </template>\n\n    </sw-page>\n{% endblock %}',mixins:[a.getByName("notification"),a.getByName("listing")],inject:["repositoryFactory"],data:function(){return{isLoading:!1,dcNotifications:null,total:0}},computed:{notificationRepository:function(){return this.repositoryFactory.create("dc_notification")},columns:function(){return[{property:"title",index:"title",label:this.$t("dc.notification.column.title")},{property:"active",index:"active",label:this.$t("dc.notification.column.active")}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.getDcNotifications()},getDcNotifications:function(){var t=this,e=new c;this.notificationRepository.search(e,Shopware.Context.api).then((function(e){t.total=e.total,t.dcNotifications=e}))},onChangeLanguage:function(){this.getDcNotifications()}}});i("3Yx9");function r(t,e,i,n,o,a,c){try{var r=t[a](c),l=r.value}catch(t){return void i(t)}r.done?e(l):Promise.resolve(l).then(n,o)}var l=Shopware,s=l.Component,d=l.Mixin;Shopware.Data.Criteria;s.register("dc-notification-detail",{template:'{% block dc_notification_detail_page %}\n    <sw-page class="dc-notification-detail-page">\n        {% block dc_notification_detail_header %}\n            <template slot="smart-bar-header">\n                <h2 v-if="dcNotification && dcNotification.isNew()">{{ $tc(\'dc.notification.header.new\') }}</h2>\n                <h2 v-if="dcNotification && !dcNotification.isNew()">\n                    {{ $t(\'dc.notification.header.update\') }}\n                    - "{{ dcNotification.translated.title }}"\n                </h2>\n            </template>\n        {% endblock %}\n\n        {% block dc_notification_detail_actions %}\n            <template slot="smart-bar-actions">\n                {% block dc_notification_detail_action_btn %}\n                    <sw-button-process\n                            variant="primary"\n                            :isLoading="isLoading"\n                            :processSuccess="processSuccess"\n                            :disabled="isLoading"\n                            @click.prevent="onSave">\n                        {{ $t(\'dc.notification.button.save\') }}\n                    </sw-button-process>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block dc_notification_language_chooser %}\n            <template #language-switch>\n                <sw-language-switch\n                        slot="language-switch"\n                        :disabled="dcNotification && dcNotification.isNew()"\n                        @on-change="onChangeLanguage">\n                </sw-language-switch>\n            </template>\n        {% endblock %}\n\n        {% block dc_notification_detail_content %}\n            <sw-card-view\n                    slot="content"\n                    :isLoading="isLoading"\n                    v-if="dcNotification">\n                <sw-card :title="$tc(\'dc.notification.generalTitle\')">\n\n                    {% block dc_notification_active_field %}\n                        <sw-switch-field v-model="dcNotification.active"\n                                         :label="$tc(\'dc.notification.field.activeNotification\')">\n                        </sw-switch-field>\n                    {% endblock %}\n\n                    {% block dc_notification_title_field %}\n                        <sw-field\n                                v-model="dcNotification.title"\n                                :label="$tc(\'dc.notification.field.title\')"\n                                :placeholder="$tc(\'dc.notification.placeholder.title\')"\n                                validation="required">\n                        </sw-field>\n                    {% endblock %}\n\n                    {% block dc_notification_display_title_field %}\n                        <sw-switch-field v-model="dcNotification.displayTitle"\n                                         :label="$tc(\'dc.notification.field.displayTitle\')">\n                        </sw-switch-field>\n                    {% endblock %}\n\n                    {% block dc_notification_content_field %}\n                        <sw-text-editor v-model="dcNotification.content"\n                                        :label="$tc(\'dc.notification.field.content\')">\n                        </sw-text-editor>\n                    {% endblock %}\n\n                </sw-card>\n\n                <sw-card title="Notification Bar Configuration">\n\n                    <label class="help-description">\n                        <b>{{ $tc(\'dc.notification.general.note\') }}</b>\n                        {{ $tc(\'dc.notification.general.commonFieldInfo\') }}\n                    </label>\n\n                    {% block dc_notification_display_as_field %}\n                        <template>\n                            <sw-single-select\n                                    v-model="dcNotification.displayAs"\n                                    :options="getDisplayAsOptions"\n                                    :label="$tc(\'dc.notification.field.displayAs\')">\n                            </sw-single-select>\n                        </template>\n                    {% endblock %}\n\n                    {% block dc_notification_animation_type_field %}\n                        <template v-if="isPopup">\n                            <sw-single-select\n                                    v-model="dcNotification.animationType"\n                                    :options="getAnimationOptions"\n                                    :label="$tc(\'dc.notification.field.animationType\')">\n                            </sw-single-select>\n                        </template>\n                    {% endblock %}\n\n                    {% block dc_notification_border_type_field %}\n                        <template>\n                            <sw-single-select\n                                    v-model="dcNotification.borderType"\n                                    :options="getBorderTypeOptions"\n                                    :label="$tc(\'dc.notification.field.border\')">\n                            </sw-single-select>\n                        </template>\n                    {% endblock %}\n\n                    {% block dc_notification_position_field %}\n                        <template v-if="!isPopup">\n                            <sw-single-select\n                                    v-model="dcNotification.position"\n                                    :options="getPositionOptions"\n                                    :label="$tc(\'dc.notification.field.barPosition\')">\n                            </sw-single-select>\n                        </template>\n                    {% endblock %}\n\n                    {% block dc_notification_bar_width_field %}\n                        <template v-if="!isPopup">\n                            <sw-single-select\n                                    v-model="dcNotification.width"\n                                    :options="getBarWidthOptions"\n                                    :label="$tc(\'dc.notification.field.barWidth\')">\n                            </sw-single-select>\n                        </template>\n                    {% endblock %}\n\n                    {% block dc_notification_cookie_field %}\n                        <sw-number-field\n                                v-model="dcNotification.cookieLifeTime"\n                                :label="$tc(\'dc.notification.field.cookieLifeTime\')"\n                                :placeholder="$tc(\'dc.notification.placeholder.cookieLifeTime\')"\n                                validation="required">\n                        </sw-number-field>\n                    {% endblock %}\n\n                </sw-card>\n\n                <sw-card title="Colors">\n\n\n                    <label class="help-description">\n                        <b>{{ $tc(\'dc.notification.general.note\') }}</b>\n                        {{ $tc(\'dc.notification.general.commonFieldInfo\') }}\n                    </label>\n\n                    {% block dc_notification_title_color_field %}\n                        <sw-colorpicker\n                                v-model="dcNotification.titleColor"\n                                :label="$tc(\'dc.notification.field.titleColor\')">\n                        </sw-colorpicker>\n                    {% endblock %}\n\n                    {% block dc_notification_icon_color_field %}\n                        <sw-colorpicker\n                                v-model="dcNotification.iconColor"\n                                :label="$tc(\'dc.notification.field.iconColor\')">\n                        </sw-colorpicker>\n                    {% endblock %}\n\n                    {% block dc_notification_overlay_color_field %}\n                        <template v-if="isPopup">\n                            <sw-colorpicker\n                                    v-model="dcNotification.overlayColor"\n                                    :label="$tc(\'dc.notification.field.overlayColor\')">\n                            </sw-colorpicker>\n                        </template>\n                    {% endblock %}\n\n                    {% block dc_notification_background_color_field %}\n                        <sw-colorpicker\n                                v-model="dcNotification.backgroundColor"\n                                :label="$tc(\'dc.notification.field.backgroundColor\')">\n                        </sw-colorpicker>\n                    {% endblock %}\n\n                    {% block dc_notification_border_color_field %}\n                        <sw-colorpicker\n                                v-model="dcNotification.borderColor"\n                                :label="$tc(\'dc.notification.field.borderColor\')">\n                        </sw-colorpicker>\n                    {% endblock %}\n\n                </sw-card>\n            </sw-card-view>\n        {% endblock %}\n    </sw-page>\n{% endblock %}',inject:["repositoryFactory"],mixins:[d.getByName("notification")],data:function(){return{dcNotification:null,isLoading:!1,processSuccess:!1,langEnabled:!0,isPopup:!1,itemId:""}},computed:{dcNotificationRepository:function(){return this.repositoryFactory.create("dc_notification")},getDisplayAsOptions:function(){return[{value:"bar",label:"Bar"},{value:"popup",label:"Popup"}]},getAnimationOptions:function(){return[{value:"fade-in",label:"Fade In"},{value:"slide-up",label:"Slide Up"},{value:"slide-down",label:"Slide Down"},{value:"slide-left",label:"Slide Left"},{value:"slide-right",label:"Slide Right"}]},getBorderTypeOptions:function(){return[{value:"no-border",label:"No Border"},{value:"solid",label:"Solid"},{value:"dashed",label:"dashed"}]},getPositionOptions:function(){return[{value:"top",label:"Top"},{value:"bottom",label:"Bottom"},{value:"below-header",label:"Below Header"},{value:"above-footer",label:"Above Footer"}]},getBarWidthOptions:function(){return[{value:"box-content",label:"Box Content"},{value:"full-width",label:"Full Width"}]}},created:function(){this.createdComponent()},watch:{"dcNotification.displayAs":function(t){this.isPopup="popup"==t}},methods:{createdComponent:function(){this.getDcNotification(),this.dcNotification&&this.dcNotification.isNew()&&Shopware.Context.api.languageId!==Shopware.Context.api.systemLanguageId&&Shopware.State.commit("context/setApiLanguageId",Shopware.Context.api.systemLanguageId)},getDcNotification:function(){var t,e=this;return(t=regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e.isLoading=!0,t.next=3,e.dcNotificationRepository.get(e.$route.params.id,Shopware.Context.api).then((function(t){e.dcNotification=t,e.isLoading=!1}));case 3:case"end":return t.stop()}}),t)})),function(){var e=this,i=arguments;return new Promise((function(n,o){var a=t.apply(e,i);function c(t){r(a,n,o,c,l,"next",t)}function l(t){r(a,n,o,c,l,"throw",t)}c(void 0)}))})()},onSave:function(){var t=this;this.isLoading=!0,this.dcNotificationRepository.save(this.dcNotification,Shopware.Context.api).then((function(){t.isLoading=!1,t.processSuccess=!0,t.createNotificationSuccess({title:"Succeess!",message:"Notification Saved successfully."})})).catch((function(e){t.isLoading=!1,e.response.data&&e.response.data.errors&&e.response.data.errors.forEach((function(e){t.createNotificationWarning({title:"Error!",message:e.detail,duration:1e4})}))}))},saveFinish:function(){this.processSuccess=!1},onChangeLanguage:function(){this.getDcNotification()}}});i("KDB6");var f=i("1HdN"),p=i("oB3h");Shopware.Module.register("dc-notification",{type:"plugin",name:"dc-global-notification",title:"Dc Notification",description:"It's a good way to show some notification, important Alerts and Offers on page load.",snippet:{"en-GB":f,"de-DE":p},version:"1.0.0",targetVersion:"1.0.0",icon:"dc-plugin-icon",routes:{list:{component:"dc-notification",path:"list",meta:{parentPath:"sw.settings.index"}},create:{component:"dc-notification-create",path:"create",meta:{parentPath:"dc.notification.list"}},detail:{component:"dc-notification-detail",path:"detail/:id",meta:{parentPath:"dc.notification.list"}},"page-notification":{component:"sw-category-page-notification",path:"page-notification",meta:{parentPath:"sw.category.index",privilege:"category.viewer"}}},settingsItem:{group:"plugins",to:"dc.notification.list",iconComponent:"dc-plugin-icon",backgroundEnabled:!0}});function u(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function g(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?u(Object(i),!0).forEach((function(e){h(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):u(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function h(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}var b=Shopware.Component,m=Shopware.Component.getComponentHelper().mapState,v=Shopware.Data.Criteria;b.register("dc-category-notification-select",{template:'{% block dc_category_notification_select %}\n    <sw-card title="Notification">\n\n        {% block dc_page_notification_active_field %}\n            <sw-container columns="repeat(auto-fit, minmax(150px, 220px))" gap="0px 30px" align="center">\n                <sw-switch-field v-model="dcActive"\n                                 :label="$tc(\'dc.notification.field.activeForCategory\')"\n                                 :disabled="isDisabled">\n                </sw-switch-field>\n                <sw-help-text :text="$tc(\'dc.notification.general.categoryHelpText\')"\n                              :width="300"\n                              tooltipPosition="top"\n                              :showDelay="100"\n                              :hideDelay="100" v-if="isDisabled">\n                    you don\'t have any notification to show.\n                </sw-help-text>\n            </sw-container>\n        {% endblock %}\n\n        {% block dc_notification_active_field %}\n            <template v-if="dcActive">\n                <sw-entity-single-select label=""\n                                         entity="dc_notification"\n                                         labelProperty="title"\n                                         valueProperty="id"\n                                         v-model="dcNotificationId">\n                </sw-entity-single-select>\n            </template>\n        {% endblock %}\n\n    </sw-card>\n{% endblock %}',inject:["repositoryFactory"],data:function(){return{dcActive:!1,dcNotificationId:"",isDisabled:!0}},computed:g(g({},m("swCategoryDetail",["category"])),{},{dcPageNotificationRepository:function(){return this.repositoryFactory.create("dc_page_notification")},dcNotificationRepository:function(){return this.repositoryFactory.create("dc_notification")}}),mounted:function(){this.mountedComponent()},created:function(){this.createdComponent()},watch:{dcActive:function(t){this.category.extensions.notification||(this.category.extensions.notification=this.dcPageNotificationRepository.create(Shopware.Context.api)),this.category.extensions.notification.active=t},dcNotificationId:function(t){this.category.extensions.notification||(this.category.extensions.notification=this.dcPageNotificationRepository.create(Shopware.Context.api)),this.category.extensions.notification.notificationId=t}},methods:{mountedComponent:function(){this.dcNotificationId=this.category.extensions.notification&&this.category.extensions.notification.notificationId,this.dcActive=this.category.extensions.notification&&this.category.extensions.notification.active},createdComponent:function(){var t=this,e=new v;e.setLimit(1),this.dcNotificationRepository.search(e,Shopware.Context.api).then((function(e){e.total>0&&(t.isDisabled=!1)}))}}}),Shopware.Module.register("dc-category-notification",{routeMiddleware:function(t,e){"sw.category.detail"===e.name&&e.children.push({name:"sw.category.notification",path:"/sw/category/index/:id/notification",component:"dc-category-notification-select",meta:{parentPath:"sw.category.index"}}),t(e)}});Shopware.Component.override("sw-category-view",{template:'{% block sw_category_view_tabs_seo %}\n    {% parent %}\n\n    <sw-tabs-item\n            :route="{ name: \'sw.category.notification\'}"\n            title="Notifications">\n        Notifications\n    </sw-tabs-item>\n\n{% endblock %}'})},b9Ev:function(t,e,i){},oB3h:function(t){t.exports=JSON.parse('{"dc":{"notification":{"general":{"note":"Notiz!","commonFieldInfo":"Die folgenden Änderungen gelten für alle Sprachen","categoryHelpText":"Sie haben keine Benachrichtigung zum Anzeigen.","noRecordTitle":"Keine Benachrichtigung!","noRecordSubline":"Es wurde keine Benachrichtigung im Datensatz gefunden"},"header":{"new":"Benachrichtigung erstellen","update":"Update-Benachrichtigung"},"list":{"title":"Benachrichtigung"},"column":{"title":"Titel","active":"Aktiv"},"button":{"save":"Speichern","create":"Schaffen"},"generalTitle":"Benachrichtigung Allgemein","field":{"activeNotification":"Aktive Benachrichtigungsleiste","title":"Titel","displayTitle":"Titel anzeigen","content":"Inhalt","displayAs":"Darstellen als","animationType":"Animationstyp","border":"Saum","barPosition":"Balkenposition","barWidth":"Balkenbreite","cookieLifeTime":"Cookie-Lebensdauer in Minuten","titleColor":"Titelfarbe","iconColor":"Symbolfarbe schließen","overlayColor":"Popup-Overlay-Farbe","backgroundColor":"Hintergrundfarbe","borderColor":"Randfarbe","activeForCategory":"Separate Benachrichtigung aktivieren"},"placeholder":{"title":"Titel","cookieLifeTime":"Zeit in Minute"}}}}')}});